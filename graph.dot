digraph {
	section [label="section 0.002"]
	be [label="be 0.070"]
	abstract [label="abstract 0.025"]
	class [label="class 0.066"]
	let [label="let 0.003"]
	consider [label="consider 0.002"]
	example [label="example 0.005"]
	famous [label="famous 0.003"]
	problem [label="problem 0.006"]
	have [label="have 0.017"]
	ship [label="ship 0.011"]
	inherit [label="inherit 0.002"]
	shape [label="shape 0.018"]
	treat [label="treat 0.006"]
	rectangular [label="rectangular 0.011"]
	take [label="take 0.002"]
	more [label="more 0.002"]
	create [label="create 0.012"]
	circle [label="circle 0.011"]
	method [label="method 0.018"]
	property [label="property 0.003"]
	trustee [label="trustee 0.003"]
	think [label="think 0.008"]
	anything [label="anything 0.005"]
	constructor [label="constructor 0.005"]
	say [label="say 0.006"]
	public [label="public 0.006"]
	share [label="share 0.004"]
	do [label="do 0.018"]
	rectangle [label="rectangle 0.012"]
	course [label="course 0.008"]
	dimension [label="dimension 0.006"]
	see [label="see 0.004"]
	land [label="land 0.009"]
	width [label="width 0.005"]
	go [label="go 0.003"]
	area [label="area 0.037"]
	define [label="define 0.008"]
	int [label="int 0.004"]
	cattle [label="cattle 0.003"]
	carrier [label="carrier 0.006"]
	return [label="return 0.006"]
	lose [label="lose 0.002"]
	anti [label="anti 0.002"]
	interview [label="interview 0.005"]
	write [label="write 0.002"]
	same [label="same 0.002"]
	kind [label="kind 0.007"]
	stuff [label="stuff 0.005"]
	separate [label="separate 0.005"]
	censorship [label="censorship 0.002"]
	call [label="call 0.014"]
	radius [label="radius 0.012"]
	fire [label="fire 0.009"]
	squad [label="squad 0.012"]
	get [label="get 0.003"]
	Matt [label="Matt 0.006"]
	reduce [label="reduce 0.002"]
	"math.fi" [label="math.fi 0.003"]
	use [label="use 0.008"]
	invite [label="invite 0.002"]
	calculate [label="calculate 0.003"]
	try [label="try 0.003"]
	run [label="run 0.005"]
	double [label="double 0.003"]
	entire [label="entire 0.003"]
	computation [label="computation 0.005"]
	cry [label="cry 0.007"]
	cost [label="cost 0.005"]
	indigent [label="indigent 0.006"]
	better [label="better 0.006"]
	arrangement [label="arrangement 0.005"]
	work [label="work 0.002"]
	other [label="other 0.002"]
	modify [label="modify 0.002"]
	know [label="know 0.003"]
	compute [label="compute 0.004"]
	best [label="best 0.002"]
	glass [label="glass 0.003"]
	second [label="second 0.004"]
	object [label="object 0.020"]
	km [label="km 0.003"]
	FAPE [label="FAPE 0.002"]
	circuit [label="circuit 0.002"]
	display [label="display 0.004"]
	Cattle [label="Cattle 0.002"]
	one [label="one 0.007"]
	key [label="key 0.006"]
	eds [label="eds 0.006"]
	code [label="code 0.008"]
	sue [label="sue 0.002"]
	look [label="look 0.007"]
	court [label="court 0.008"]
	clear [label="clear 0.003"]
	right [label="right 0.006"]
	chip [label="chip 0.007"]
	want [label="want 0.003"]
	prevent [label="prevent 0.002"]
	first [label="first 0.003"]
	place [label="place 0.004"]
	part [label="part 0.002"]
	stop [label="stop 0.002"]
	disbar [label="disbar 0.003"]
	make [label="make 0.005"]
	sense [label="sense 0.005"]
	type [label="type 0.004"]
	statement [label="statement 0.004"]
	generate [label="generate 0.002"]
	error [label="error 0.005"]
	answer [label="answer 0.004"]
	main [label="main 0.002"]
	thing [label="thing 0.005"]
	happen [label="happen 0.005"]
	compile [label="compile 0.003"]
	new [label="new 0.004"]
	variable [label="variable 0.005"]
	allow [label="allow 0.003"]
	valid [label="valid 0.003"]
	runtime [label="runtime 0.002"]
	credit [label="credit 0.004"]
	clean [label="clean 0.003"]
	s [label="s 0.006"]
	learn [label="learn 0.002"]
	follow [label="follow 0.002"]
	relationship [label="relationship 0.003"]
	superclass [label="superclass 0.008"]
	subclass [label="subclass 0.011"]
	possible [label="possible 0.005"]
	static [label="static 0.005"]
	assign [label="assign 0.006"]
	different [label="different 0.002"]
	calculation [label="calculation 0.003"]
	easy [label="easy 0.003"]
	way [label="way 0.007"]
	meaning [label="meaning 0.002"]
	something [label="something 0.002"]
	become [label="become 0.002"]
	declaration [label="declaration 0.002"]
	Calico [label="Calico 0.005"]
	implement [label="implement 0.007"]
	real [label="real 0.003"]
	requirement [label="requirement 0.006"]
	square [label="square 0.006"]
	extend [label="extend 0.002"]
	sake [label="sake 0.002"]
	leave [label="leave 0.002"]
	edit [label="edit 0.002"]
	need [label="need 0.002"]
	override [label="override 0.008"]
	calc [label="calc 0.008"]
	triangle [label="triangle 0.006"]
	solid [label="solid 0.006"]
	normal [label="normal 0.004"]
	stereotype [label="stereotype 0.005"]
	early [label="early 0.002"]
	idiot [label="idiot 0.002"]
	child [label="child 0.003"]
	redefine [label="redefine 0.004"]
	debt [label="debt 0.004"]
	unusual [label="unusual 0.003"]
	general [label="general 0.003"]
	observation [label="observation 0.004"]
	hierarchy [label="hierarchy 0.005"]
	base [label="base 0.002"]
	situation [label="situation 0.002"]
	foreign [label="foreign 0.003"]
	force [label="force 0.002"]
	sub [label="sub 0.002"]
	certain [label="certain 0.006"]
	section -> be [constraint=false]
	section -> abstract [constraint=false]
	be -> abstract [constraint=false]
	be -> class [constraint=false]
	be -> famous [constraint=false]
	be -> problem [constraint=false]
	be -> go [constraint=false]
	be -> public [constraint=false]
	be -> int [constraint=false]
	be -> return [constraint=false]
	be -> constructor [constraint=false]
	be -> property [constraint=false]
	be -> call [constraint=false]
	be -> fire [constraint=false]
	be -> squad [constraint=false]
	be -> "math.fi" [constraint=false]
	be -> double [constraint=false]
	be -> better [constraint=false]
	be -> kind [constraint=false]
	be -> be [constraint=false]
	be -> dimension [constraint=false]
	be -> display [constraint=false]
	be -> key [constraint=false]
	be -> eds [constraint=false]
	be -> code [constraint=false]
	be -> clear [constraint=false]
	be -> create [constraint=false]
	be -> sense [constraint=false]
	be -> make [constraint=false]
	be -> define [constraint=false]
	be -> allow [constraint=false]
	be -> one [constraint=false]
	be -> valid [constraint=false]
	be -> have [constraint=false]
	be -> circle [constraint=false]
	be -> possible [constraint=false]
	be -> superclass [constraint=false]
	be -> static [constraint=false]
	be -> try [constraint=false]
	be -> do [constraint=false]
	be -> easy [constraint=false]
	be -> way [constraint=false]
	be -> cry [constraint=false]
	be -> say [constraint=false]
	be -> real [constraint=false]
	be -> requirement [constraint=false]
	be -> unusual [constraint=false]
	be -> general [constraint=false]
	be -> observation [constraint=false]
	abstract -> class [constraint=false]
	abstract -> call [constraint=false]
	abstract -> shape [constraint=false]
	abstract -> method [constraint=false]
	abstract -> calc [constraint=false]
	abstract -> use [constraint=false]
	abstract -> look [constraint=false]
	abstract -> be [constraint=false]
	class -> treat [constraint=false]
	class -> create [constraint=false]
	class -> course [constraint=false]
	class -> second [constraint=false]
	class -> have [constraint=false]
	class -> call [constraint=false]
	class -> be [constraint=false]
	class -> abstract [constraint=false]
	class -> answer [constraint=false]
	class -> class [constraint=false]
	class -> shape [constraint=false]
	class -> square [constraint=false]
	class -> use [constraint=false]
	class -> triangle [constraint=false]
	class -> do [constraint=false]
	class -> object [constraint=false]
	class -> look [constraint=false]
	class -> override [constraint=false]
	class -> hierarchy [constraint=false]
	class -> implement [constraint=false]
	class -> certain [constraint=false]
	let -> consider [constraint=false]
	let -> have [constraint=false]
	let -> say [constraint=false]
	let -> public [constraint=false]
	let -> see [constraint=false]
	let -> try [constraint=false]
	let -> modify [constraint=false]
	let -> be [constraint=false]
	let -> run [constraint=false]
	let -> let [constraint=false]
	let -> leave [constraint=false]
	consider -> example [constraint=false]
	famous -> problem [constraint=false]
	problem -> return [constraint=false]
	problem -> be [constraint=false]
	have -> ship [constraint=false]
	have -> class [constraint=false]
	have -> method [constraint=false]
	have -> property [constraint=false]
	have -> constructor [constraint=false]
	have -> anti [constraint=false]
	have -> land [constraint=false]
	have -> problem [constraint=false]
	have -> return [constraint=false]
	have -> other [constraint=false]
	have -> best [constraint=false]
	have -> glass [constraint=false]
	have -> rectangle [constraint=false]
	have -> circuit [constraint=false]
	have -> shape [constraint=false]
	have -> type [constraint=false]
	have -> runtime [constraint=false]
	have -> error [constraint=false]
	have -> create [constraint=false]
	have -> superclass [constraint=false]
	have -> variable [constraint=false]
	have -> meaning [constraint=false]
	have -> something [constraint=false]
	have -> call [constraint=false]
	have -> abstract [constraint=false]
	have -> implement [constraint=false]
	have -> have [constraint=false]
	have -> override [constraint=false]
	have -> become [constraint=false]
	have -> hierarchy [constraint=false]
	ship -> class [constraint=false]
	ship -> trustee [constraint=false]
	ship -> constructor [constraint=false]
	ship -> call [constraint=false]
	ship -> be [constraint=false]
	ship -> abstract [constraint=false]
	ship -> object [constraint=false]
	inherit -> shape [constraint=false]
	inherit -> class [constraint=false]
	shape -> class [constraint=false]
	shape -> treat [constraint=false]
	shape -> be [constraint=false]
	shape -> type [constraint=false]
	shape -> object [constraint=false]
	shape -> variable [constraint=false]
	shape -> static [constraint=false]
	shape -> abstract [constraint=false]
	treat -> rectangular [constraint=false]
	treat -> class [constraint=false]
	treat -> object [constraint=false]
	rectangular -> class [constraint=false]
	rectangular -> solid [constraint=false]
	take -> more [constraint=false]
	take -> class [constraint=false]
	take -> censorship [constraint=false]
	more -> class [constraint=false]
	create -> circle [constraint=false]
	create -> class [constraint=false]
	create -> object [constraint=false]
	create -> first [constraint=false]
	create -> subclass [constraint=false]
	create -> new [constraint=false]
	create -> stereotype [constraint=false]
	circle -> class [constraint=false]
	circle -> rectangular [constraint=false]
	method -> call [constraint=false]
	method -> Calico [constraint=false]
	method -> area [constraint=false]
	method -> subclass [constraint=false]
	method -> calc [constraint=false]
	method -> have [constraint=false]
	method -> debt [constraint=false]
	property -> call [constraint=false]
	property -> radius [constraint=false]
	think -> anything [constraint=false]
	think -> dimension [constraint=false]
	think -> area [constraint=false]
	constructor -> let [constraint=false]
	constructor -> public [constraint=false]
	constructor -> rectangle [constraint=false]
	say -> public [constraint=false]
	say -> share [constraint=false]
	say -> cattle [constraint=false]
	say -> carrier [constraint=false]
	say -> km [constraint=false]
	public -> share [constraint=false]
	public -> int [constraint=false]
	public -> rectangle [constraint=false]
	do -> do [constraint=false]
	do -> anything [constraint=false]
	do -> entire [constraint=false]
	do -> computation [constraint=false]
	do -> have [constraint=false]
	do -> know [constraint=false]
	do -> make [constraint=false]
	do -> be [constraint=false]
	do -> want [constraint=false]
	do -> create [constraint=false]
	do -> shape [constraint=false]
	do -> abstract [constraint=false]
	do -> calculation [constraint=false]
	do -> override [constraint=false]
	do -> foreign [constraint=false]
	do -> object [constraint=false]
	rectangle -> class [constraint=false]
	rectangle -> course [constraint=false]
	rectangle -> circle [constraint=false]
	course -> think [constraint=false]
	see -> work [constraint=false]
	see -> radius [constraint=false]
	see -> new [constraint=false]
	see -> shape [constraint=false]
	see -> edit [constraint=false]
	land -> width [constraint=false]
	land -> interview [constraint=false]
	go -> area [constraint=false]
	go -> be [constraint=false]
	go -> display [constraint=false]
	area -> define [constraint=false]
	area -> be [constraint=false]
	area -> fire [constraint=false]
	area -> squad [constraint=false]
	area -> ship [constraint=false]
	area -> chip [constraint=false]
	define -> area [constraint=false]
	define -> class [constraint=false]
	cattle -> carrier [constraint=false]
	return -> land [constraint=false]
	lose -> have [constraint=false]
	anti -> land [constraint=false]
	write -> same [constraint=false]
	write -> kind [constraint=false]
	same -> kind [constraint=false]
	same -> stuff [constraint=false]
	kind -> stuff [constraint=false]
	kind -> arrangement [constraint=false]
	kind -> statement [constraint=false]
	stuff -> separate [constraint=false]
	separate -> class [constraint=false]
	censorship -> be [constraint=false]
	call -> radius [constraint=false]
	call -> shape [constraint=false]
	call -> abstract [constraint=false]
	call -> method [constraint=false]
	call -> Calico [constraint=false]
	call -> area [constraint=false]
	call -> square [constraint=false]
	call -> calc [constraint=false]
	radius -> area [constraint=false]
	radius -> radius [constraint=false]
	radius -> be [constraint=false]
	fire -> squad [constraint=false]
	fire -> Matt [constraint=false]
	get -> fire [constraint=false]
	get -> Matt [constraint=false]
	get -> invite [constraint=false]
	get -> sue [constraint=false]
	get -> idiot [constraint=false]
	reduce -> radius [constraint=false]
	use -> get [constraint=false]
	use -> abstract [constraint=false]
	use -> class [constraint=false]
	use -> triangle [constraint=false]
	use -> circle [constraint=false]
	invite -> radius [constraint=false]
	calculate -> area [constraint=false]
	try -> run [constraint=false]
	try -> compile [constraint=false]
	try -> do [constraint=false]
	run -> see [constraint=false]
	run -> code [constraint=false]
	entire -> computation [constraint=false]
	computation -> cry [constraint=false]
	cry -> cost [constraint=false]
	cry -> say [constraint=false]
	cost -> indigent [constraint=false]
	better -> kind [constraint=false]
	better -> arrangement [constraint=false]
	better -> way [constraint=false]
	better -> do [constraint=false]
	arrangement -> be [constraint=false]
	arrangement -> possible [constraint=false]
	other -> one [constraint=false]
	modify -> shape [constraint=false]
	modify -> class [constraint=false]
	know -> compute [constraint=false]
	compute -> area [constraint=false]
	best -> glass [constraint=false]
	best -> rectangle [constraint=false]
	best -> class [constraint=false]
	glass -> rectangle [constraint=false]
	glass -> class [constraint=false]
	second -> class [constraint=false]
	object -> abstract [constraint=false]
	object -> be [constraint=false]
	object -> create [constraint=false]
	object -> subclass [constraint=false]
	object -> key [constraint=false]
	FAPE -> be [constraint=false]
	FAPE -> dimension [constraint=false]
	circuit -> class [constraint=false]
	display -> area [constraint=false]
	Cattle -> carrier [constraint=false]
	one -> be [constraint=false]
	key -> eds [constraint=false]
	key -> thing [constraint=false]
	eds -> rectangle [constraint=false]
	code -> be [constraint=false]
	code -> one [constraint=false]
	code -> run [constraint=false]
	sue -> ship [constraint=false]
	look -> court [constraint=false]
	clear -> right [constraint=false]
	chip -> be [constraint=false]
	chip -> superclass [constraint=false]
	want -> prevent [constraint=false]
	want -> shape [constraint=false]
	want -> kind [constraint=false]
	want -> use [constraint=false]
	prevent -> shape [constraint=false]
	prevent -> class [constraint=false]
	first -> place [constraint=false]
	part -> want [constraint=false]
	part -> code [constraint=false]
	stop -> disbar [constraint=false]
	make -> sense [constraint=false]
	make -> shape [constraint=false]
	sense -> make [constraint=false]
	sense -> create [constraint=false]
	sense -> stereotype [constraint=false]
	type -> object [constraint=false]
	type -> be [constraint=false]
	type -> variable [constraint=false]
	statement -> be [constraint=false]
	generate -> error [constraint=false]
	error -> do [constraint=false]
	error -> credit [constraint=false]
	answer -> class [constraint=false]
	main -> thing [constraint=false]
	main -> happen [constraint=false]
	thing -> happen [constraint=false]
	thing -> be [constraint=false]
	happen -> be [constraint=false]
	compile -> code [constraint=false]
	new -> shape [constraint=false]
	new -> class [constraint=false]
	variable -> assign [constraint=false]
	allow -> do [constraint=false]
	allow -> be [constraint=false]
	runtime -> error [constraint=false]
	credit -> clean [constraint=false]
	credit -> s [constraint=false]
	clean -> s [constraint=false]
	learn -> be [constraint=false]
	follow -> relationship [constraint=false]
	superclass -> be [constraint=false]
	subclass -> subclass [constraint=false]
	subclass -> object [constraint=false]
	subclass -> superclass [constraint=false]
	subclass -> have [constraint=false]
	subclass -> implement [constraint=false]
	subclass -> override [constraint=false]
	subclass -> child [constraint=false]
	different -> subclass [constraint=false]
	different -> object [constraint=false]
	calculation -> calculate [constraint=false]
	calculation -> area [constraint=false]
	easy -> way [constraint=false]
	way -> better [constraint=false]
	way -> do [constraint=false]
	something -> call [constraint=false]
	something -> abstract [constraint=false]
	something -> method [constraint=false]
	become -> declaration [constraint=false]
	become -> requirement [constraint=false]
	become -> abstract [constraint=false]
	declaration -> be [constraint=false]
	Calico -> area [constraint=false]
	implement -> right [constraint=false]
	implement -> certain [constraint=false]
	implement -> method [constraint=false]
	real -> requirement [constraint=false]
	extend -> ship [constraint=false]
	sake -> do [constraint=false]
	need -> have [constraint=false]
	override -> abstract [constraint=false]
	override -> method [constraint=false]
	override -> redefine [constraint=false]
	calc -> area [constraint=false]
	triangle -> circle [constraint=false]
	triangle -> rectangular [constraint=false]
	solid -> normal [constraint=false]
	solid -> class [constraint=false]
	normal -> class [constraint=false]
	stereotype -> object [constraint=false]
	early -> example [constraint=false]
	child -> class [constraint=false]
	child -> override [constraint=false]
	redefine -> abstract [constraint=false]
	redefine -> method [constraint=false]
	debt -> have [constraint=false]
	unusual -> be [constraint=false]
	general -> observation [constraint=false]
	general -> abstract [constraint=false]
	observation -> abstract [constraint=false]
	observation -> class [constraint=false]
	base -> class [constraint=false]
	base -> be [constraint=false]
	situation -> do [constraint=false]
	foreign -> object [constraint=false]
	foreign -> be [constraint=false]
	force -> sub [constraint=false]
	force -> class [constraint=false]
	sub -> class [constraint=false]
	sub -> implement [constraint=false]
	certain -> method [constraint=false]
}